package common.ui.cache.internal;

import java.io.File;
import java.net.URISyntaxException;
import java.net.URL;
import java.util.ArrayList;
import java.util.List;

import org.eclipse.core.runtime.FileLocator;
import org.eclipse.core.runtime.IConfigurationElement;
import org.eclipse.core.runtime.IExtensionRegistry;
import org.eclipse.core.runtime.Path;
import org.eclipse.core.runtime.Platform;
import org.osgi.framework.Bundle;

public class ProviderRegistry {

	public static final String ID = "com.bonavision.ui.cache";
	public static final String UNKNOWN = "icons/unknown.png";
	
	public static class Provider {
		public String plugin;
		public String folder;
		public Provider(String id, String image) { this.plugin = id; this.folder = image; }
	}
	
	private static List<Provider> getProviders() {
		IExtensionRegistry reg = Platform.getExtensionRegistry();
		IConfigurationElement[] extensions = reg.getConfigurationElementsFor("com.bonavision.ui.cache.providers");
		
		List<Provider> imageProviders = new ArrayList<Provider>();
		for(IConfigurationElement extension : extensions) {
			if(extension.getName().equals("imageProvider")) {
				String id = extension.getContributor().getName();
				String folder = extension.getAttribute("folder");
				imageProviders.add(new Provider(id, folder));
			}
		}
		return imageProviders;
	}
	
	public static URL find(String name) {
		for(Provider provider : getProviders()) {
			Bundle bundle = Platform.getBundle(provider.plugin);
			String path = provider.folder+(provider.folder.endsWith("/")?"":"/")+name;
			URL url = FileLocator.find(bundle, new Path(path), null);
			if(url != null) {
				return url;
			}
		}
		return FileLocator.find(Platform.getBundle(ID), new Path(UNKNOWN), null);
	}
	
}
