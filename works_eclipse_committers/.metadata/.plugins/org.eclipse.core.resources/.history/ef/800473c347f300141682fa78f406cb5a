package com.gut.ui;

import java.io.File;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import org.eclipse.core.runtime.Platform;
import org.eclipse.core.runtime.preferences.ConfigurationScope;
import org.eclipse.jface.window.Window;
import org.eclipse.osgi.service.datalocation.Location;
import org.eclipse.swt.graphics.Rectangle;
import org.eclipse.swt.widgets.Display;
import org.eclipse.swt.widgets.Shell;
import org.osgi.service.prefs.Preferences;

public class ApplicationImpl extends AbsApplication {

	public static final int MAX_HISTORY = 7;
	
	@Override
	protected boolean _start(Display display) {
		boolean okPressed = showWorkspaceSelectionDialog(display, getApplicationTitle());
		return okPressed;
	}	

	private boolean showWorkspaceSelectionDialog(Display display, String productName) {
		
		final Preferences preferences = ConfigurationScope.INSTANCE.getNode("com.gut.ui.workbench.withworks");
		final String historyStr = preferences.get("workspace", "C:\\");
		final List<String> history = new ArrayList<String>();
		history.addAll(Arrays.asList(historyStr.split(";")));
		
		WorkspaceSelectionDialog dlg = new WorkspaceSelectionDialog(new Shell(display), history.toArray(new String[0]), new WorkspaceSelectionDialog.Listener() {
			@Override
			public void okPressed(String path) {
				try {
					history.remove(path);
					history.add(0, path);
					
					StringBuffer newhistoryStrBuffer = new StringBuffer();
					int size = history.size() < MAX_HISTORY ? history.size() : MAX_HISTORY;
					for(int i=0; i<size; i++){
						newhistoryStrBuffer.append(history.get(i));
						if(i < size-1){
							newhistoryStrBuffer.append(";");
						}
					}
					preferences.put("workspace", newhistoryStrBuffer.toString());
					preferences.flush();
					
					Location instanceLoc = Platform.getInstanceLocation();
					if (instanceLoc.isSet()) {
						instanceLoc.release();	
					}
					instanceLoc.setURL(new File(path).toURL(), false);
				} catch (Exception e) { e.printStackTrace(); }
			}
		}, productName);
		dlg.create();
		
		Rectangle rect = dlg.getShell().getBounds();
		Rectangle winRect = display.getBounds();
		int x = winRect.width/2 - rect.width/2;
		int y = winRect.height/2 - rect.height/2;
		dlg.getShell().setBounds(new Rectangle(x, y, rect.width, rect.height));
		
		int result = dlg.open();
		if(result == Window.CANCEL){
			return false;
		}
		return true;
	}

}
