package com.gut.example.zest;

import org.eclipse.swt.widgets.Composite;
import org.eclipse.ui.part.ViewPart;

public class ExampleZestView extends ViewPart {

	@Override
	public void createPartControl(Composite parent) {
		final Graph g = new Graph(shell, SWT.NONE);
		GraphNode root = new GraphNode(g, SWT.NONE, "Root");
		for (int i = 0; i < 3; i++) {
			GraphNode n = new GraphNode(g, SWT.NONE, "1 - " + i);
			for (int j = 0; j < 3; j++) {
				GraphNode n2 = new GraphNode(g, SWT.NONE, "2 - " + j);
				new GraphConnection(g, SWT.NONE, n, n2);
			}
			new GraphConnection(g, SWT.NONE, root, n);
		}

		SpringLayoutAlgorithm springLayoutAlgorithm = new SpringLayoutAlgorithm(LayoutStyles.NO_LAYOUT_NODE_RESIZING);

		ConstraintAdapter constraintAdapters = new ConstraintAdapter() {

			public void populateConstraint(Object object, LayoutConstraint constraint) {
				if (constraint instanceof BasicEdgeConstraints) {
					BasicEdgeConstraints basicEdgeConstraints = (BasicEdgeConstraints) constraint;
					GraphConnection connection = (GraphConnection) object;
					if (connection.getSource().getText().equals("Root")) {
						basicEdgeConstraints.weight = 1;
					}
					else {
						basicEdgeConstraints.weight = -1;
					}
				}

			}
		};

		g.addConstraintAdapter(constraintAdapters);
		g.setLayoutAlgorithm(springLayoutAlgorithm, true);
	}

	@Override
	public void setFocus() {
		// TODO Auto-generated method stub

	}

}
